x-healthcheck: &healthcheck_defaults
  interval: 10s
  timeout: 10s
  retries: 30
  start_period: 10s

x-sentry-defaults: &sentry_defaults
  image: ${SENTRY_IMAGE}
  environment:
    PYTHONUSERBASE: "/data/custom-packages"
    SENTRY_CONF: "/etc/sentry"
    SNUBA: "http://snuba-api:1218"
    VROOM: "http://vroom:8085"
    # redis
    SENTRY_REDIS_HOST: "redis"
    # secret key
    SENTRY_SINGLE_ORGANIZATION: "false"
    SENTRY_SECRET_KEY: "${SENTRY_SECRET_KEY:-}"
    # Force everything to use the system CA bundle
    # This is mostly needed to support installing custom CA certs
    # This one is used by botocore
    DEFAULT_CA_BUNDLE: &ca_bundle "/etc/ssl/certs/ca-certificates.crt"
    # This one is used by requests
    REQUESTS_CA_BUNDLE: *ca_bundle
    # This one is used by grpc/google modules
    GRPC_DEFAULT_SSL_ROOTS_FILE_PATH_ENV_VAR: *ca_bundle
    # Leaving the value empty to just pass whatever is set
    # on the host system (or in the .env file)
    SENTRY_EVENT_RETENTION_DAYS: "${SENTRY_EVENT_RETENTION_DAYS:-90}"
    SENTRY_MAIL_HOST: "${SENTRY_MAIL_HOST:-}"
    SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE: "${SENTRY_MAX_EXTERNAL_SOURCEMAP_SIZE:-1M}"
    # Set this value if you plan on using the Suggested Fix Feature
    OPENAI_API_KEY: "${OPENAI_API_KEY:-}"
    # Opt-out remote beacon server
    SENTRY_BEACON: "false"
  configs:
    - source: sentry.yml
      target: /etc/sentry/config.yml
    - source: sentry.conf.py
      target: /etc/sentry/sentry.conf.py
  networks:
    - sentry
  volumes:
    - sentry-data:/data
    - geoip:/geoip:ro
    - certificates:/usr/local/share/ca-certificates:ro
  deploy:
    rollback_config:
      parallelism: 1
      order: stop-first
      delay: 0s
      failure_action: rollback
      monitor: 0s
      max_failure_ratio: 1
    restart_policy:
      condition: on-failure
      delay: 5s
      max_attempts: 3
      window: 120s
    update_config:
      parallelism: 1
      order: stop-first
      delay: 0s
      failure_action: rollback
      monitor: 0s
      max_failure_ratio: 1
    resources:
      limits:
        cpus: '0.2'
        memory: 256M

services:
  web:
    <<: *sentry_defaults
    command: ["run", "web"]
    ulimits:
      nofile:
        soft: 4096
        hard: 4096
    healthcheck:
      <<: *healthcheck_defaults
      test:
        - "CMD"
        - "/bin/bash"
        - "-c"
        # Courtesy of https://unix.stackexchange.com/a/234089/108960
        - 'exec 3<>/dev/tcp/127.0.0.1/9000 && echo -e "GET /_health/ HTTP/1.1\r\nhost: 127.0.0.1\r\n\r\n" >&3 && grep ok -s -m 1 <&3'

  cron:
    <<: *sentry_defaults
    command: run cron

  worker:
    <<: *sentry_defaults
    command: run worker
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 1G

  events-consumer:
    <<: *sentry_defaults
    command: run consumer ingest-events --consumer-group ingest-consumer

  attachments-consumer:
    <<: *sentry_defaults
    command: run consumer ingest-attachments --consumer-group ingest-consumer

  transactions-consumer:
    <<: *sentry_defaults
    command: run consumer ingest-transactions --consumer-group ingest-consumer

  metrics-consumer:
    <<: *sentry_defaults
    command: run consumer ingest-metrics --consumer-group metrics-consumer

  generic-metrics-consumer:
    <<: *sentry_defaults
    command: run consumer ingest-generic-metrics --consumer-group generic-metrics-consumer

  billing-metrics-consumer:
    <<: *sentry_defaults
    command: run consumer billing-metrics-consumer --consumer-group billing-metrics-consumer

  ingest-replay-recordings:
    <<: *sentry_defaults
    command: run consumer ingest-replay-recordings --consumer-group ingest-replay-recordings

  ingest-occurrences:
    <<: *sentry_defaults
    command: run consumer ingest-occurrences --consumer-group ingest-occurrences

  ingest-profiles:
    <<: *sentry_defaults
    command: run consumer --no-strict-offset-reset ingest-profiles --consumer-group ingest-profiles

  post-process-forwarder-errors:
    <<: *sentry_defaults
    command: run consumer post-process-forwarder-errors --consumer-group post-process-forwarder --synchronize-commit-log-topic=snuba-commit-log --synchronize-commit-group=snuba-consumers

  post-process-forwarder-transactions:
    <<: *sentry_defaults
    command: run consumer post-process-forwarder-transactions --consumer-group post-process-forwarder --synchronize-commit-log-topic=snuba-transactions-commit-log --synchronize-commit-group transactions_group

  post-process-forwarder-issue-platform:
    <<: *sentry_defaults
    command: run consumer post-process-forwarder-issue-platform --consumer-group post-process-forwarder --synchronize-commit-log-topic=snuba-generic-events-commit-log --synchronize-commit-group generic_events_group

  subscription-consumer-events:
    <<: *sentry_defaults
    command: run consumer events-subscription-results --consumer-group query-subscription-consumer

  subscription-consumer-transactions:
    <<: *sentry_defaults
    command: run consumer transactions-subscription-results --consumer-group query-subscription-consumer

  subscription-consumer-metrics:
    <<: *sentry_defaults
    command: run consumer metrics-subscription-results --consumer-group query-subscription-consumer

  subscription-consumer-generic-metrics:
    <<: *sentry_defaults
    command: run consumer generic-metrics-subscription-results --consumer-group query-subscription-consumer

  # sentry-cleanup:
  #   <<: *sentry_defaults
  #   image: sentry-cleanup-self-hosted-local
  #   build:
  #     context: ./cron
  #     args:
  #       BASE_IMAGE: sentry-self-hosted-local
  #   entrypoint: "/entrypoint.sh"
  #   command: '"0 0 * * * gosu sentry sentry cleanup --days $SENTRY_EVENT_RETENTION_DAYS"'

networks:
  sentry:
    name: sentry
    external: true

configs:
  sentry.yml:
    file: configs/config.yml
  sentry.conf.py:
    file: configs/sentry.conf.py

volumes:
  sentry-data:

  # These are shared volumes from other services.
  geoip:
    name: geoip
    external: true
  certificates:
    name: certificates
    external: true
